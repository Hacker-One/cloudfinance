{"version":3,"sources":["webpack:///./src/app/pages/account/account.component.html","webpack:///./src/app/pages/account/account.component.scss","webpack:///./src/app/pages/account/account.component.ts","webpack:///./src/app/pages/account/account.module.ts","webpack:///./src/app/pages/account/addresses/addresses.component.html","webpack:///./src/app/pages/account/addresses/addresses.component.scss","webpack:///./src/app/pages/account/addresses/addresses.component.ts","webpack:///./src/app/pages/account/dashboard/dashboard.component.html","webpack:///./src/app/pages/account/dashboard/dashboard.component.scss","webpack:///./src/app/pages/account/dashboard/dashboard.component.ts","webpack:///./src/app/pages/account/information/information.component.html","webpack:///./src/app/pages/account/information/information.component.scss","webpack:///./src/app/pages/account/information/information.component.ts","webpack:///./src/app/pages/account/orders/orders.component.html","webpack:///./src/app/pages/account/orders/orders.component.scss","webpack:///./src/app/pages/account/orders/orders.component.ts"],"names":[],"mappings":"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","file":"app-pages-account-account-module.js","sourcesContent":["module.exports = \"<mat-sidenav-container>\\r\\n    <!--<mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"account-sidenav\\\" perfectScrollbar>-->\\r\\n        <!--<mat-nav-list class=\\\"mat-elevation-z1 h-100\\\">-->\\r\\n            <!--<mat-list-item *ngFor=\\\"let link of links\\\">              -->\\r\\n                <!--<mat-icon matListIcon class=\\\"mat-icon-sm\\\">{{link.icon}}</mat-icon>-->\\r\\n                <!--<a matLine [routerLink]=\\\"link.href\\\" routerLinkActive=\\\"horizontal-active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">{{ link.name }}</a>-->\\r\\n            <!--</mat-list-item>-->\\r\\n        <!--</mat-nav-list>-->\\r\\n    <!--</mat-sidenav>-->\\r\\n    <mat-sidenav-content class=\\\"account-content\\\" ngClass.gt-sm=\\\"p-left\\\">\\r\\n        <!--<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"header-row mat-elevation-z1 text-muted\\\">-->\\r\\n            <!--<button *ngIf=\\\"!sidenavOpen\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">-->\\r\\n                <!--<mat-icon>more_vert</mat-icon>-->\\r\\n            <!--</button>-->\\r\\n            <!--<h3>My Account</h3>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"account-wrapper mat-elevation-z1\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".account-sidenav {\\n  width: 280px;\\n  padding: 2px; }\\n  .account-sidenav .mat-nav-list {\\n    box-sizing: border-box; }\\n  .account-sidenav .mat-nav-list .mat-list-item {\\n      height: 36px;\\n      font-size: 14px; }\\n  .account-content {\\n  min-height: 400px;\\n  padding: 2px;\\n  overflow: hidden; }\\n  .account-content.p-left {\\n    padding-left: 16px; }\\n  .account-content .header-row {\\n    background: #fff;\\n    padding: 0 16px;\\n    height: 56px; }\\n  .account-content .account-wrapper {\\n    margin-top: 16px;\\n    padding: 16px;\\n    background: #fff; }\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen:boolean = true;\r\n  public links = [\r\n    { name: 'Account Dashboard', href: 'dashboard', icon: 'dashboard' },\r\n    { name: 'Account Information', href: 'information', icon: 'info' },\r\n    { name: 'Addresses', href: 'addresses', icon: 'location_on' },\r\n    { name: 'Order History', href: 'orders', icon: 'add_shopping_cart' },  \r\n    { name: 'Logout', href: '/sign-in', icon: 'power_settings_new' },    \r\n  ];\r\n  constructor(public router:Router) { }\r\n\r\n  ngOnInit() {\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) { \r\n        if(window.innerWidth < 960){\r\n          this.sidenav.close(); \r\n        }\r\n      }                \r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { InformationComponent } from './information/information.component';\r\nimport { AddressesComponent } from './addresses/addresses.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport {RouteguardService} from '../../theme/utils/RouteguardService';\r\n\r\nexport const routes = [\r\n  {\r\n      path: '',\r\n      component: AccountComponent, children: [\r\n          // { path: '', redirectTo: 'orders', pathMatch: 'full' },\r\n          // { path: 'dashboard', component: DashboardComponent, data: {  breadcrumb: 'Dashboard' } },\r\n          // { path: 'information', component: InformationComponent, data: {  breadcrumb: 'Information' } },\r\n          // { path: 'addresses', component: AddressesComponent, data: {  breadcrumb: 'Addresses' } },\r\n          { path: '', component: OrdersComponent,canActivate: [RouteguardService], data: {  breadcrumb: '订单' } }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [\r\n    AccountComponent,\r\n    DashboardComponent,\r\n    InformationComponent,\r\n    AddressesComponent,\r\n    OrdersComponent\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","module.exports = \"<mat-tab-group >\\r\\n    <mat-tab label=\\\"Billing address\\\">\\r\\n        <div class=\\\"p-2 mt-1\\\">\\r\\n            <form [formGroup]=\\\"billingForm\\\" (ngSubmit)=\\\"onBillingFormSubmit(billingForm.value)\\\">     \\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.firstName.errors?.required\\\">First name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">\\r\\n                          {{country.name}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"billingForm.controls.country.errors?.required\\\">Country is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.city.errors?.required\\\">City is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\r\\n                      <mat-error *ngIf=\\\"billingForm.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onBillingFormSubmit(billingForm.value)\\\">Save</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Shipping address\\\">\\r\\n        <div class=\\\"p-2 mt-1\\\">\\r\\n            <form [formGroup]=\\\"shippingForm\\\" (ngSubmit)=\\\"onShippingFormSubmit(shippingForm.value)\\\">     \\r\\n              <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.firstName.errors?.required\\\">First name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.lastName.errors?.required\\\">Last name is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Middle Name/Initial\\\" formControlName=\\\"middleName\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.phone.errors?.required\\\">Phone is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                    <mat-select placeholder=\\\"Country\\\" formControlName=\\\"country\\\" required>\\r\\n                      <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">\\r\\n                          {{country.name}}\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"shippingForm.controls.country.errors?.required\\\">Country is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.city.errors?.required\\\">City is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"State/Province\\\" formControlName=\\\"state\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Zip/Postal Code\\\" formControlName=\\\"zip\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.zip.errors?.required\\\">Zip/Postal Code is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                  <mat-form-field class=\\\"w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Address (street, apartment, suite, unit etc.)\\\" formControlName=\\\"address\\\" required>\\r\\n                      <mat-error *ngIf=\\\"shippingForm.controls.address.errors?.required\\\">Address is required</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onShippingFormSubmit(shippingForm.value)\\\">Save</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../../../app.service';\r\n\r\n@Component({\r\n  selector: 'app-addresses',\r\n  templateUrl: './addresses.component.html',\r\n  styleUrls: ['./addresses.component.scss']\r\n})\r\nexport class AddressesComponent implements OnInit {\r\n  billingForm: FormGroup;\r\n  shippingForm: FormGroup;\r\n  countries = [];\r\n  constructor(public appService:AppService, public formBuilder: FormBuilder, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.countries = this.appService.getCountries();\r\n    this.billingForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.required],\r\n      'lastName': ['', Validators.required],\r\n      'middleName': '',\r\n      'company': '',\r\n      'email': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n      'country': ['', Validators.required],\r\n      'city': ['', Validators.required],\r\n      'state': '',\r\n      'zip': ['', Validators.required],\r\n      'address': ['', Validators.required]\r\n    });\r\n    this.shippingForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.required],\r\n      'lastName': ['', Validators.required],\r\n      'middleName': '',\r\n      'company': '',\r\n      'email': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n      'country': ['', Validators.required],\r\n      'city': ['', Validators.required],\r\n      'state': '',\r\n      'zip': ['', Validators.required],\r\n      'address': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public onBillingFormSubmit(values:Object):void {\r\n    if (this.billingForm.valid) {\r\n      this.snackBar.open('Your billing address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onShippingFormSubmit(values:Object):void {\r\n    if (this.shippingForm.valid) {\r\n      this.snackBar.open('Your shipping address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<p class=\\\"text-muted\\\">Hello, <b>Emilio Verdines!</b>\\r\\nFrom your My Account Dashboard you have the ability to view a snapshot of your recent account activity and update your account information. Select a link below to view or edit information.</p>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" class=\\\"flex-wrapper\\\">\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Account Information</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/information\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n              <p>Emilio Verdines</p>\\r\\n              <p>emilio.verdines@gmail.com</p>\\r\\n              <p><a routerLink=\\\"/account/information\\\" class=\\\"primary-text\\\">Change password</a></p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Addresses</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/addresses\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n            <p>Billing address</p>\\r\\n            <p>Shipping address</p>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"33.3\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\" class=\\\"col\\\">\\r\\n        <mat-card class=\\\"p-0\\\">\\r\\n          <mat-card-header class=\\\"p-1 account-card-title\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n              <mat-card-title class=\\\"m-0\\\"><h3>Orders</h3></mat-card-title>\\r\\n              <a mat-icon-button routerLink=\\\"/account/orders\\\"><mat-icon class=\\\"text-muted\\\">edit</mat-icon></a>\\r\\n          </mat-card-header>\\r\\n          <div class=\\\"divider\\\"></div>\\r\\n          <mat-card-content class=\\\"p-2 text-muted account-card-content\\\">\\r\\n            <p class=\\\"\\\">Completed</p>\\r\\n            <mat-progress-bar value=\\\"75\\\" color=\\\"primary\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">Processing</p>\\r\\n            <mat-progress-bar value=\\\"25\\\" color=\\\"accent\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">On hold</p>\\r\\n            <mat-progress-bar value=\\\"65\\\" color=\\\"warn\\\"></mat-progress-bar>\\r\\n            <p class=\\\"mt-1\\\">Refunded</p>\\r\\n            <mat-progress-bar value=\\\"25\\\" color=\\\"primary\\\"></mat-progress-bar>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".flex-wrapper {\\n  margin: 8px -8px; }\\n  .flex-wrapper .col {\\n    padding: 8px; }\\n  .account-card-content {\\n  height: 134px; }\\n  .account-card-content a {\\n    text-decoration: none; }\\n  .account-card-content a:hover {\\n      text-decoration: underline; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center\\\">Account details</h2>\\r\\n        <form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"onInfoFormSubmit(infoForm.value)\\\">\\r\\n            <mat-form-field class=\\\"w-100 mt-2\\\">\\r\\n                <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstName.errors?.required\\\">First Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstName.hasError('minlength')\\\">First Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastName.errors?.required\\\">Last Name is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastName.hasError('minlength')\\\">Last Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onInfoFormSubmit(infoForm.value)\\\">Save</button>\\r\\n            </div> \\r\\n        </form>\\r\\n    </div>\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n        <h2 class=\\\"text-muted text-center\\\">Password change</h2>\\r\\n        <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"onPasswordFormSubmit(passwordForm.value)\\\">            \\r\\n            <mat-form-field class=\\\"w-100 mt-2\\\">\\r\\n                <input matInput placeholder=\\\"Current Password\\\" formControlName=\\\"currentPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.errors?.required\\\">Current Password is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.currentPassword.hasError('minlength')\\\">Current Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n                <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.errors?.required\\\">New Password is required</mat-error>\\r\\n                <mat-error *ngIf=\\\"passwordForm.controls.newPassword.hasError('minlength')\\\">New Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n            </mat-form-field> \\r\\n            <mat-form-field class=\\\"w-100 mt-1\\\">\\r\\n              <input matInput placeholder=\\\"Confirm New Password\\\" formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\" required>\\r\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.errors?.required\\\">Confirm New Password is required</mat-error>\\r\\n              <mat-error *ngIf=\\\"passwordForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onPasswordFormSubmit(passwordForm.value)\\\">Change</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div> \\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator, matchingPasswords } from '../../../theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.scss']\r\n})\r\nexport class InformationComponent implements OnInit {\r\n  infoForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.infoForm = this.formBuilder.group({\r\n      'firstName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'lastName': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      'currentPassword': ['', Validators.required],\r\n      'newPassword': ['', Validators.required],\r\n      'confirmNewPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('newPassword', 'confirmNewPassword')});\r\n  }\r\n\r\n  public onInfoFormSubmit(values:Object):void {\r\n    if (this.infoForm.valid) {\r\n      this.snackBar.open('Your account information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n  public onPasswordFormSubmit(values:Object):void {\r\n    if (this.passwordForm.valid) {\r\n      this.snackBar.open('Your password changed successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"mat-table orders-table\\\">\\r\\n    <div class=\\\"mat-header-row\\\">\\r\\n      <div class=\\\"mat-header-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">商品名称</div>\\r\\n      <div class=\\\"mat-header-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">订单时间</div>\\r\\n      <div class=\\\"mat-header-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">订单状态</div>\\r\\n      <!--<div class=\\\"mat-header-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">操作</div>-->\\r\\n    </div>\\r\\n\\r\\n    <div *ngFor=\\\"let order of orders | paginate: { itemsPerPage: count, currentPage: page,totalItems:total }\\\" class=\\\"mat-row\\\">\\r\\n      <div class=\\\"mat-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">\\r\\n          <span class=\\\"order\\\">\\r\\n               <a [routerLink]=\\\"['/', order.productId, order.productName]\\\" class=\\\"image-link\\\">\\r\\n                       {{order.productName}}\\r\\n                    </a>\\r\\n          </span>\\r\\n      </div>\\r\\n      <div class=\\\"mat-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">{{ order.createDate | date:'yyyy年MM月dd日 HH:mm:ss' }}</div>\\r\\n      <div class=\\\"mat-cell\\\" class=\\\"{{order.orderStatus=='paid'?'success':'error'}}\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">{{order.orderStatusName}}</div>\\r\\n      <!--<div class=\\\"mat-cell\\\" fxFlex=\\\"120\\\" fxFlex.gt-xs=\\\"40\\\">-->\\r\\n        <!--<div class=\\\"p-1 actions\\\">-->\\r\\n          <!--<button mat-mini-fab color=\\\"primary\\\" matTooltip=\\\"查看\\\">-->\\r\\n              <!--<mat-icon>remove_red_eye</mat-icon>-->\\r\\n          <!--</button>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n    </div>\\r\\n    <div  *ngIf=\\\"orders.length==0\\\" fxLayout=\\\"row wrap\\\" style=\\\"text-align: center\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <span>\\r\\n                暂无订单数据\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"orders.length > 0\\\" fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\">\\r\\n            <mat-card class=\\\"p-0 text-center\\\">\\r\\n                <pagination-controls class=\\\"product-pagination\\\" autoHide=\\\"true\\\" maxSize=\\\"5\\\" (pageChange)=\\\"onPageChanged($event)\\\" nextLabel=\\\"下一页\\\" previousLabel=\\\"上一页\\\"></pagination-controls>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \".orders-table.mat-table {\\n  display: block;\\n  overflow-x: auto;\\n  text-align: center; }\\n  .orders-table.mat-table .mat-row, .orders-table.mat-table .mat-header-row {\\n    display: flex;\\n    border-bottom-width: 1px;\\n    border-bottom-style: solid;\\n    align-items: center;\\n    min-height: 48px;\\n    padding: 0 24px;\\n    min-width: 870px; }\\n  .orders-table.mat-table .mat-cell, .orders-table.mat-table .mat-header-cell {\\n    flex: 1;\\n    overflow: hidden;\\n    word-wrap: break-word; }\\n  .orders-table.mat-table .mat-header-cell {\\n    font-size: 14px; }\\n  .orders-table.mat-table .mat-cell .order {\\n    color: inherit;\\n    text-decoration: none;\\n    font-weight: 500; }\\n  .orders-table.mat-table .mat-cell .btn-invoice {\\n    margin-left: 8px; }\\n  .orders-table.mat-table .mat-cell .actions {\\n    text-align: center; }\\n  .error {\\n  color: red; }\\n  .success {\\n  color: green; }\\n  a {\\n  text-decoration: none; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {HttpInterceptorService} from '../../../theme/utils/httpInterceptor.service';\r\nimport {LocalStorage} from '../../../local.storage';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  public page:any\r\n  public count:any;\r\n  public total=0\r\n  public orders = []\r\n  constructor( public router:Router,public localStorage:LocalStorage,public snackBar: MatSnackBar,public httpUtil:HttpInterceptorService) { }\r\n\r\n  ngOnInit() {\r\n\r\n          this.count =12;\r\n          this.getAllOrders(\"\",1)\r\n\r\n  }\r\n    public getAllOrders(name,page){\r\n        this.httpUtil.get('/v1/orders?name='+name+'&page='+page,data=>{\r\n            if(data.statusCode==\"200\"){\r\n                if(data.code==\"000\"){\r\n                    this.total=data.data['size:']\r\n                    this.orders=data.data['orders:'];\r\n                }else{\r\n                    this.snackBar.open(data.message, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\r\n                }\r\n            }else{\r\n                this.snackBar.open(data.message, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\r\n            }\r\n        },err=>{\r\n            this.snackBar.open(err, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\r\n        });\r\n    }\r\n    public onPageChanged(event){\r\n        this.page = event;\r\n        this.getAllOrders(\"\",this.page);\r\n        window.scrollTo(0,0);\r\n    }\r\n}\r\n"],"sourceRoot":""}